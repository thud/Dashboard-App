#pragma checksum "/home/jp/CODE/Dashboard/Pages/Index.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "90def1072c735679fb5f77cabcdfc300e8c81344"
// <auto-generated/>
#pragma warning disable 1591
namespace Dashboard.Pages
{
    #line hidden
    using System.Linq;
    using Microsoft.AspNetCore.Components;
#line 2 "/home/jp/CODE/Dashboard/_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#line 3 "/home/jp/CODE/Dashboard/_Imports.razor"
using Microsoft.AspNetCore.Components.Layouts;

#line default
#line hidden
#line 4 "/home/jp/CODE/Dashboard/_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#line 5 "/home/jp/CODE/Dashboard/_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#line 6 "/home/jp/CODE/Dashboard/_Imports.razor"
using Dashboard;

#line default
#line hidden
#line 7 "/home/jp/CODE/Dashboard/_Imports.razor"
using Dashboard.Shared;

#line default
#line hidden
#line 3 "/home/jp/CODE/Dashboard/Pages/Index.razor"
using System;

#line default
#line hidden
#line 4 "/home/jp/CODE/Dashboard/Pages/Index.razor"
using System.Net;

#line default
#line hidden
#line 5 "/home/jp/CODE/Dashboard/Pages/Index.razor"
using System.Net.Http;

#line default
#line hidden
#line 6 "/home/jp/CODE/Dashboard/Pages/Index.razor"
using System.Net.Http.Headers;

#line default
#line hidden
#line 7 "/home/jp/CODE/Dashboard/Pages/Index.razor"
using System.Threading.Tasks;

#line default
#line hidden
#line 9 "/home/jp/CODE/Dashboard/Pages/Index.razor"
using System.Collections.Generic;

#line default
#line hidden
#line 10 "/home/jp/CODE/Dashboard/Pages/Index.razor"
using System.Runtime.Serialization.Json;

#line default
#line hidden
    [Microsoft.AspNetCore.Components.Layouts.LayoutAttribute(typeof(MainLayout))]
    [Microsoft.AspNetCore.Components.RouteAttribute("/")]
    public class Index : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder builder)
        {
            builder.AddMarkupContent(0, "<h1>Dashboard</h1>\n\n");
            builder.AddMarkupContent(1, "<p>Current count: Select the <b>Display Graph</b> button.</p>\n\n");
            builder.OpenElement(2, "button");
            builder.AddAttribute(3, "class", "btn btn-primary");
            builder.AddAttribute(4, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.UIMouseEventArgs>(this, 
#line 16 "/home/jp/CODE/Dashboard/Pages/Index.razor"
                                           FetchData

#line default
#line hidden
            ));
            builder.AddContent(5, "Fetch ");
            builder.AddMarkupContent(6, "<b>Query 1</b> Data");
            builder.CloseElement();
            builder.AddMarkupContent(7, "\n");
            builder.OpenElement(8, "button");
            builder.AddAttribute(9, "class", "btn btn-primary");
            builder.AddAttribute(10, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.UIMouseEventArgs>(this, 
#line 17 "/home/jp/CODE/Dashboard/Pages/Index.razor"
                                           DisplayGraph1

#line default
#line hidden
            ));
            builder.AddContent(11, "Display Graph 1");
            builder.CloseElement();
            builder.AddMarkupContent(12, "\n\n");
            builder.OpenElement(13, "button");
            builder.AddAttribute(14, "class", "btn btn-primary");
            builder.AddAttribute(15, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.UIMouseEventArgs>(this, 
#line 19 "/home/jp/CODE/Dashboard/Pages/Index.razor"
                                           DisplayGraph2

#line default
#line hidden
            ));
            builder.AddContent(16, "Display Graph 2");
            builder.CloseElement();
            builder.AddMarkupContent(17, "\n\n<div id=\"graph1\" style=\"width: 1400px; height:400px; margin-top: 50px;\"></div>\n<div id=\"graph2\" style=\"width: 1400px; height:400px; margin-top: 50px;\"></div>\n\n\n");
            builder.AddMarkupContent(18, @"<p style=""color: grey;"">NOTE: Due to the structure of the Blazor Framework, to see trade information for trades in this batch, you must: <br><b>1. TYPE IN THE BATCH-GUID FOR YOUR CHOSEN BATCH<br>2. PRESS ENTER IN THE INPUT BOX<br>3. PRESS THE BLUE REFRESH BUTTON</b></p>
");
            builder.OpenElement(19, "h3");
            builder.AddContent(20, "BatchGUID: ");
            builder.OpenElement(21, "input");
            builder.AddAttribute(22, "id", "batchGUIDinput");
            builder.AddAttribute(23, "type", "text");
            builder.AddAttribute(24, "value", Microsoft.AspNetCore.Components.BindMethods.GetValue(
#line 26 "/home/jp/CODE/Dashboard/Pages/Index.razor"
                                                              Index.selectedBatchGUID

#line default
#line hidden
            ));
            builder.AddAttribute(25, "onchange", Microsoft.AspNetCore.Components.EventCallback.Factory.CreateBinder(this, __value => Index.selectedBatchGUID = __value, Index.selectedBatchGUID));
            builder.CloseElement();
            builder.OpenElement(26, "button");
            builder.AddAttribute(27, "type", "submit");
            builder.AddAttribute(28, "class", "btn btn-info");
            builder.AddAttribute(29, "onclick", 
#line 26 "/home/jp/CODE/Dashboard/Pages/Index.razor"
                                                                                                                                              update

#line default
#line hidden
            );
            builder.AddContent(30, "Refresh");
            builder.CloseElement();
            builder.CloseElement();
            builder.AddMarkupContent(31, "\n\n");
            builder.OpenElement(32, "table");
            builder.AddAttribute(33, "class", "table table-hover");
            builder.AddAttribute(34, "id", "trades-table");
            builder.AddMarkupContent(35, "\n  ");
            builder.AddMarkupContent(36, "<thead>\n    <tr>\n      <th scope=\"col\">TradeID</th>\n      <th scope=\"col\">SecID</th>\n      <th scope=\"col\">Client Account No.</th>\n      <th scope=\"col\">Report Name</th>\n    </tr>\n  </thead>\n");
#line 37 "/home/jp/CODE/Dashboard/Pages/Index.razor"
   if (!Index.trades.Any()) {

#line default
#line hidden
            builder.AddContent(37, "    ");
            builder.AddMarkupContent(38, "<tr>\n      <th scope=\"row\">N/A</th>\n      <td>N/A</td>\n      <td>N/A</td>\n      <td>N/A</td>\n    </tr>\n");
#line 44 "/home/jp/CODE/Dashboard/Pages/Index.razor"
  } else {
  

#line default
#line hidden
#line 45 "/home/jp/CODE/Dashboard/Pages/Index.razor"
   if (selectedBatchGUID != -1) {
    }

#line default
#line hidden
            builder.AddContent(39, "    ");
            builder.OpenElement(40, "tbody");
            builder.AddMarkupContent(41, "\n");
#line 48 "/home/jp/CODE/Dashboard/Pages/Index.razor"
     foreach (var trade in Index.trades) {

#line default
#line hidden
            builder.AddContent(42, "      ");
            builder.OpenElement(43, "tr");
            builder.AddMarkupContent(44, "\n        ");
            builder.OpenElement(45, "th");
            builder.AddAttribute(46, "scope", "row");
            builder.AddContent(47, 
#line 50 "/home/jp/CODE/Dashboard/Pages/Index.razor"
                         trade.TradeId

#line default
#line hidden
            );
            builder.CloseElement();
            builder.AddMarkupContent(48, "\n        ");
            builder.OpenElement(49, "td");
            builder.AddContent(50, 
#line 51 "/home/jp/CODE/Dashboard/Pages/Index.razor"
             trade.SecId

#line default
#line hidden
            );
            builder.CloseElement();
            builder.AddMarkupContent(51, "\n        ");
            builder.OpenElement(52, "td");
            builder.AddContent(53, 
#line 52 "/home/jp/CODE/Dashboard/Pages/Index.razor"
             trade.ClientAcctNo

#line default
#line hidden
            );
            builder.CloseElement();
            builder.AddMarkupContent(54, "\n        ");
            builder.OpenElement(55, "td");
            builder.AddContent(56, 
#line 53 "/home/jp/CODE/Dashboard/Pages/Index.razor"
             trade.ReportName

#line default
#line hidden
            );
            builder.CloseElement();
            builder.AddMarkupContent(57, "\n      ");
            builder.CloseElement();
            builder.AddMarkupContent(58, "\n");
#line 55 "/home/jp/CODE/Dashboard/Pages/Index.razor"
    }

#line default
#line hidden
            builder.AddContent(59, "    ");
            builder.CloseElement();
            builder.AddMarkupContent(60, "\n");
#line 57 "/home/jp/CODE/Dashboard/Pages/Index.razor"
}

#line default
#line hidden
            builder.CloseElement();
        }
        #pragma warning restore 1998
#line 60 "/home/jp/CODE/Dashboard/Pages/Index.razor"
            
  private static async Task GetBatchDetails(int BatchGUID)
  {
    //Index.selectedBatchGUID = BatchGUID;
    Console.WriteLine(BatchGUID);
    Console.WriteLine("http://localhost:3000/api/tradeinformationonbatches/" + BatchGUID);
    var streamTask = client.GetStreamAsync("http://localhost:3000/api/tradeinformationonbatches/" + BatchGUID);

    try {
      Index.trades = tradeSerializer.ReadObject(await streamTask) as List<Trade>;
    } catch {
      Index.trades.Clear(); // create empty list
    }

    for (var i = 0; i < trades.Count; i++) {
      Console.WriteLine(trades[i].TradeId);
    }
  }

  private void update() {
    Console.WriteLine("update");
    StateHasChanged();
  }

  
  private async void FetchData()
  {

    var streamTask = client.GetStreamAsync("http://localhost:3000/api/guidelinecheckdurations");
    batches = batchSerializer.ReadObject(await streamTask) as List<Batch>;

    var streamTask2 = client.GetStreamAsync("http://localhost:3000/api/accountscheckedinbatch");
    batchQuantities = batchQuantitySerializer.ReadObject(await streamTask2) as List<BatchQuantity>;
    /*foreach (var batch in batches)
        Console.WriteLine(batch.Queued + "  duration: " + batch.QueueDuration);*/
  }

  private async void DisplayGraph1()
  {
      await JsRuntime.InvokeAsync<int>("displayGraph1", batches);
      StateHasChanged();
  }

  private async void DisplayGraph2()
  {
      await JsRuntime.InvokeAsync<int>("displayGraph2", batchQuantities, batches);
      StateHasChanged();
  }

#line default
#line hidden
#line 111 "/home/jp/CODE/Dashboard/Pages/Index.razor"
       
    private static readonly HttpClient client = new HttpClient();
    private static DataContractJsonSerializer batchSerializer = new DataContractJsonSerializer(typeof(List<Batch>));
    private static DataContractJsonSerializer batchQuantitySerializer = new DataContractJsonSerializer(typeof(List<BatchQuantity>));
    private static DataContractJsonSerializer tradeSerializer = new DataContractJsonSerializer(typeof(List<Trade>));

    public static List<Batch> batches;
    public static List<BatchQuantity> batchQuantities;
    public static List<Trade> trades = new List<Trade>();
    private static int _selectedBatchGUID;
    public static int selectedBatchGUID { 
      get {
        Console.WriteLine("batch getted: " + _selectedBatchGUID);
        return _selectedBatchGUID;
        }
      set{
        Console.WriteLine("batch input update: ->>>>> " + value);
        GetBatchDetails(value);
        _selectedBatchGUID = value;
      }
    }// = -1;



#line default
#line hidden
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IJSRuntime JsRuntime { get; set; }
    }
}
#pragma warning restore 1591
